/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package las.views;

import SeverConnector.Connector;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;
import las.common_classes.GUIitemsValidator;
import las.common_classes.PatternChecker;

import las.models.Client;
import las.models.Grant;

/**
 *
 * @author Gimhani
 */
public class ChangeGrantOwnershipForm extends javax.swing.JDialog {

    private Grant grant;
    las.controller.GrantController GrantController;

    /**
     * Creates new form ChangeGrantOwnershipForm
     */
    public ChangeGrantOwnershipForm() {
        
        initComponents();
          try {
            Connector sConnector = Connector.getSConnector();
            GrantController=sConnector.getGrantController();
        } catch (RemoteException | SQLException | NotBoundException | MalformedURLException|ClassNotFoundException ex) {
            Logger.getLogger(ApplicantForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.grantno_changeOwnerCombo.setEditable(true);
        nic_text.requestFocus();
        namenotvalidlabel.setVisible(false);
        nicInvalidLabel.setVisible(false);
        phonenumnotvalidlabel.setVisible(false);
        occupationnotvalidlabel.setVisible(false);
        incomenotvalidlabel.setVisible(false);

        grantno_changeOwnerCombo.setEditable(true);
        JTextComponent editorGrant = (JTextComponent) grantno_changeOwnerCombo.getEditor().getEditorComponent();
        editorGrant.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent e) {
                String item = (String) grantno_changeOwnerCombo.getEditor().getItem();
                ArrayList<Object> list = new ArrayList();
                try {

                    ArrayList<Grant> similarPermitNumberGrants = GrantController.getSimilarGrantNumbers(item);
                    for (int i = 0; i < similarPermitNumberGrants.size(); i++) {
                        list.add(similarPermitNumberGrants.get(i).getGrantNumber());
                    }
                    GUIitemsValidator.addItemToCombo(list, grantno_changeOwnerCombo);

                } catch (ClassNotFoundException | SQLException|RemoteException ex) {
                    Logger.getLogger(LandForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ownerText = new javax.swing.JTextField();
        grantno_changeOwnerCombo = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        namelabel = new javax.swing.JLabel();
        telephoneText = new javax.swing.JTextField();
        PhoneNo = new javax.swing.JLabel();
        newowner_name_text = new javax.swing.JTextField();
        niclabel = new javax.swing.JLabel();
        nic_text = new javax.swing.JTextField();
        addresslabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_text = new javax.swing.JTextArea();
        nicInvalidLabel = new javax.swing.JLabel();
        Birthday = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        marriedStatusRButton = new javax.swing.JRadioButton();
        singleStatusRButton = new javax.swing.JRadioButton();
        childrenCountPanel = new javax.swing.JPanel();
        NumberOfMarriedChildren = new javax.swing.JLabel();
        NoOfUnmarriedChildren = new javax.swing.JLabel();
        marriedChildrenCountSpinner = new javax.swing.JSpinner();
        unmarriedChildrenCountSpinner = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        Occupation = new javax.swing.JLabel();
        occupationText = new javax.swing.JTextField();
        AnnualIncome = new javax.swing.JLabel();
        annualIncomeText = new javax.swing.JTextField();
        occupationnotvalidlabel = new javax.swing.JLabel();
        incomenotvalidlabel = new javax.swing.JLabel();
        add_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();
        phonenumnotvalidlabel = new javax.swing.JLabel();
        namenotvalidlabel = new javax.swing.JLabel();
        birthdayChooser1 = new org.freixas.jcalendar.JCalendarCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Current Owner");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Grant No");

        ownerText.setEditable(false);

        grantno_changeOwnerCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                grantno_changeOwnerComboItemStateChanged(evt);
            }
        });
        grantno_changeOwnerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantno_changeOwnerComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grantno_changeOwnerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerText, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(grantno_changeOwnerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(ownerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("New Ownership Details"));

        namelabel.setText("Name:");

        telephoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telephoneTextKeyReleased(evt);
            }
        });

        PhoneNo.setText("Phone Number:");

        newowner_name_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newowner_name_textKeyReleased(evt);
            }
        });

        niclabel.setText("NIC:");

        nic_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nic_textActionPerformed(evt);
            }
        });
        nic_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nic_textKeyReleased(evt);
            }
        });

        addresslabel.setText("Address:");

        address_text.setColumns(20);
        address_text.setRows(5);
        address_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                address_textKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(address_text);

        nicInvalidLabel.setForeground(new java.awt.Color(255, 0, 0));
        nicInvalidLabel.setText("NIC is invalid");

        Birthday.setText("Birthday:");

        Status.setText("Status:");

        marriedStatusRButton.setText("Married");
        marriedStatusRButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                marriedStatusRButtonStateChanged(evt);
            }
        });
        marriedStatusRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marriedStatusRButtonActionPerformed(evt);
            }
        });
        marriedStatusRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marriedStatusRButtonKeyReleased(evt);
            }
        });

        singleStatusRButton.setText("Single");
        singleStatusRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                singleStatusRButtonKeyReleased(evt);
            }
        });

        childrenCountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Number of children"));

        NumberOfMarriedChildren.setText("No. of married children:");

        NoOfUnmarriedChildren.setText("No. of  unmarried children:");

        marriedChildrenCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                marriedChildrenCountSpinnerStateChanged(evt);
            }
        });
        marriedChildrenCountSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marriedChildrenCountSpinnerKeyReleased(evt);
            }
        });

        unmarriedChildrenCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                unmarriedChildrenCountSpinnerStateChanged(evt);
            }
        });
        unmarriedChildrenCountSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unmarriedChildrenCountSpinnerKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout childrenCountPanelLayout = new javax.swing.GroupLayout(childrenCountPanel);
        childrenCountPanel.setLayout(childrenCountPanelLayout);
        childrenCountPanelLayout.setHorizontalGroup(
            childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(childrenCountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NoOfUnmarriedChildren, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(NumberOfMarriedChildren, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(marriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unmarriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        childrenCountPanelLayout.setVerticalGroup(
            childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(childrenCountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfMarriedChildren)
                    .addComponent(marriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NoOfUnmarriedChildren)
                    .addComponent(unmarriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Income Details"));

        Occupation.setText("Occupation:");

        occupationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationTextActionPerformed(evt);
            }
        });
        occupationText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                occupationTextKeyReleased(evt);
            }
        });

        AnnualIncome.setText("Estimated Annual Income: Rs.");

        annualIncomeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                annualIncomeTextKeyReleased(evt);
            }
        });

        occupationnotvalidlabel.setForeground(new java.awt.Color(204, 0, 0));
        occupationnotvalidlabel.setText("Not Valid");

        incomenotvalidlabel.setForeground(new java.awt.Color(204, 0, 0));
        incomenotvalidlabel.setText("Not Valid");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AnnualIncome)
                    .addComponent(Occupation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(occupationText, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(occupationnotvalidlabel))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(annualIncomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(incomenotvalidlabel))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Occupation)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(occupationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(occupationnotvalidlabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AnnualIncome)
                        .addComponent(annualIncomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(incomenotvalidlabel))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });
        add_button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                add_buttonKeyReleased(evt);
            }
        });

        cancel_button.setText("Cancel");
        cancel_button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cancel_buttonKeyReleased(evt);
            }
        });

        phonenumnotvalidlabel.setForeground(new java.awt.Color(255, 0, 0));
        phonenumnotvalidlabel.setText("NIC is invalid");

        namenotvalidlabel.setForeground(new java.awt.Color(255, 0, 0));
        namenotvalidlabel.setText("NIC is invalid");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancel_button)
                .addGap(19, 19, 19))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneNo)
                    .addComponent(addresslabel)
                    .addComponent(Birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Status)
                    .addComponent(namelabel)
                    .addComponent(niclabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(nic_text, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(nicInvalidLabel)
                                .addGap(53, 53, 53))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(newowner_name_text)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(namenotvalidlabel)
                                .addGap(58, 58, 58)))
                        .addComponent(childrenCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(telephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phonenumnotvalidlabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(marriedStatusRButton)
                                .addGap(18, 18, 18)
                                .addComponent(singleStatusRButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthdayChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nic_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nicInvalidLabel)
                            .addComponent(niclabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(namelabel)
                            .addComponent(newowner_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namenotvalidlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNo)
                            .addComponent(phonenumnotvalidlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addresslabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Birthday)
                            .addComponent(birthdayChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Status)
                            .addComponent(marriedStatusRButton)
                            .addComponent(singleStatusRButton)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(childrenCountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancel_button)
                            .addComponent(add_button))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telephoneTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneTextKeyReleased
        // TODO add your handling code here:
        phonenumnotvalidlabel.setVisible(false);
        String newtext = PatternChecker.checkTelNum(telephoneText.getText());
        telephoneText.setText(newtext);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (telephoneText.getText().length() == 10) {
                address_text.requestFocus();
            } else {
                phonenumnotvalidlabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            address_text.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            nic_text.requestFocus();
        }
    }//GEN-LAST:event_telephoneTextKeyReleased

    private void birthdayChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdayChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthdayChooser1ActionPerformed

    private void birthdayChooser1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_birthdayChooser1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            marriedStatusRButton.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            marriedStatusRButton.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            address_text.requestFocus();

        }
    }//GEN-LAST:event_birthdayChooser1KeyReleased

    private void marriedStatusRButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_marriedStatusRButtonStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_marriedStatusRButtonStateChanged

    private void marriedStatusRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marriedStatusRButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marriedStatusRButtonActionPerformed

    private void marriedStatusRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marriedStatusRButtonKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            marriedStatusRButton.isSelected();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            marriedChildrenCountSpinner.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            birthdayChooser1.requestFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            singleStatusRButton.requestFocus();

        }
    }//GEN-LAST:event_marriedStatusRButtonKeyReleased

    private void singleStatusRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singleStatusRButtonKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            singleStatusRButton.isSelected();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            marriedChildrenCountSpinner.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            birthdayChooser1.requestFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            marriedStatusRButton.requestFocus();

        }
    }//GEN-LAST:event_singleStatusRButtonKeyReleased

    private void marriedChildrenCountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_marriedChildrenCountSpinnerStateChanged
        // TODO add your handling code here:
        GUIitemsValidator.limitminimumSpinnerValue(marriedChildrenCountSpinner, 0);
    }//GEN-LAST:event_marriedChildrenCountSpinnerStateChanged

    private void marriedChildrenCountSpinnerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marriedChildrenCountSpinnerKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            unmarriedChildrenCountSpinner.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            GUIitemsValidator.decrementSpinnerValue(marriedChildrenCountSpinner);
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            GUIitemsValidator.incermentSpinnerValue(marriedChildrenCountSpinner);

        }
    }//GEN-LAST:event_marriedChildrenCountSpinnerKeyReleased

    private void unmarriedChildrenCountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_unmarriedChildrenCountSpinnerStateChanged
        // TODO add your handling code here:
        GUIitemsValidator.limitminimumSpinnerValue(unmarriedChildrenCountSpinner, 0);
    }//GEN-LAST:event_unmarriedChildrenCountSpinnerStateChanged

    private void unmarriedChildrenCountSpinnerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unmarriedChildrenCountSpinnerKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            occupationText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            GUIitemsValidator.decrementSpinnerValue(unmarriedChildrenCountSpinner);
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            GUIitemsValidator.incermentSpinnerValue(unmarriedChildrenCountSpinner);

        }
    }//GEN-LAST:event_unmarriedChildrenCountSpinnerKeyReleased

    private void occupationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationTextActionPerformed

    private void occupationTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_occupationTextKeyReleased
        // TODO add your handling code here:
        occupationnotvalidlabel.setVisible(false);
        String newtext = PatternChecker.checkstring(occupationText.getText());
        occupationText.setText(newtext);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (PatternChecker.checkStringdirect(occupationText.getText())) {
                annualIncomeText.requestFocus();
            } else {
                occupationnotvalidlabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            annualIncomeText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            unmarriedChildrenCountSpinner.requestFocus();

        }
    }//GEN-LAST:event_occupationTextKeyReleased

    private void annualIncomeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_annualIncomeTextKeyReleased
        // TODO add your handling code here:
        incomenotvalidlabel.setVisible(false);
        String newtext = PatternChecker.checkDecimal(annualIncomeText.getText());
        annualIncomeText.setText(newtext);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (PatternChecker.checkDecimaldirect(annualIncomeText.getText())) {
                // addCurrentResidenceButton.requestFocus();
            } else {
                incomenotvalidlabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            add_button.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            occupationText.requestFocus();

        }
    }//GEN-LAST:event_annualIncomeTextKeyReleased

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
            try {                                           
                Grant searchGrant = GrantController.searchGrant(String.valueOf(grantno_changeOwnerCombo.getSelectedItem()));               
               if(searchGrant !=null){ 
                int isMarried = 1;
                String grantOwnerName = newowner_name_text.getText();
                String nic = nic_text.getText();
                String telephoneNumber = telephoneText.getText();
                String address = address_text.getText();
                Date date = birthdayChooser1.getDate();
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY-MM-dd");
                String DOB = simpleDateFormat.format(date);
                System.out.println(DOB);
                if (singleStatusRButton.isSelected()) {
                    isMarried = 0;
                }
                int marriedSons = Integer.parseInt(marriedChildrenCountSpinner.getValue().toString());
                int unmarriedSons = Integer.parseInt(unmarriedChildrenCountSpinner.getValue().toString());
                double annualincome = Double.parseDouble(annualIncomeText.getText());
                
                //int cur_PermitOwnership = this.grant.getClient().getPermitOwnershipPosition();
                int cur_GrantOwnership = searchGrant.getClient().getGrantOwnershipPosition() + 1;//as grant ownership is changed
                
                Client newclient = new Client(nic, grantOwnerName, DOB, telephoneNumber, address, annualincome, ++cur_GrantOwnership, 0, isMarried, marriedSons, unmarriedSons);
                searchGrant.setClient(newclient);
                try {
                    boolean changeGrantOwnership = GrantController.changeGrantOwnership(searchGrant);
                    if (changeGrantOwnership) {
                        JOptionPane.showMessageDialog(this, "grant ownership change succesfully");
                        this.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "grant ownership doesnot change");
                    }
                } catch (ClassNotFoundException | SQLException |RemoteException ex) {
                    Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(Level.SEVERE, null, ex);
                }
               }
            } catch (ClassNotFoundException | SQLException |RemoteException ex) {
                Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_add_buttonActionPerformed

    private void nic_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nic_textKeyReleased
        // TODO add your handling code here:
        nicInvalidLabel.setVisible(false);
        String newtext = PatternChecker.checkNIC(nic_text.getText());
        nic_text.setText(newtext);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (PatternChecker.checkNICdirect(nic_text.getText())) {
                newowner_name_text.requestFocus();
            } else {
                nicInvalidLabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            newowner_name_text.requestFocus();
        }

    }//GEN-LAST:event_nic_textKeyReleased

    private void newowner_name_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newowner_name_textKeyReleased
        // TODO add your handling code here:
        namenotvalidlabel.setVisible(false);
        String newtext = PatternChecker.checkstring(newowner_name_text.getText());
        newowner_name_text.setText(newtext);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (PatternChecker.checkStringdirect(newowner_name_text.getText())) {
                telephoneText.requestFocus();
            } else {
                namenotvalidlabel.setVisible(true);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            telephoneText.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            nic_text.requestFocus();
        }
    }//GEN-LAST:event_newowner_name_textKeyReleased

    private void add_buttonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_add_buttonKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            cancel_button.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            annualIncomeText.requestFocus();

        }
    }//GEN-LAST:event_add_buttonKeyReleased

    private void cancel_buttonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancel_buttonKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            add_button.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            annualIncomeText.requestFocus();
        }
    }//GEN-LAST:event_cancel_buttonKeyReleased

    private void address_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_address_textKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            marriedStatusRButton.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            telephoneText.requestFocus();
        }
    }//GEN-LAST:event_address_textKeyReleased

    private void grantno_changeOwnerComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_grantno_changeOwnerComboItemStateChanged
        try {
            Grant searchGrant = GrantController.searchGrant(String.valueOf(grantno_changeOwnerCombo.getSelectedItem()));
           if (searchGrant!=null) {
                ownerText.setText(searchGrant.getClient().getClientName());

            }
        } catch (ClassNotFoundException | SQLException |RemoteException ex) {
            Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grantno_changeOwnerComboItemStateChanged

    private void grantno_changeOwnerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantno_changeOwnerComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grantno_changeOwnerComboActionPerformed

    private void nic_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nic_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nic_textActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeGrantOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChangeGrantOwnershipForm dialog = new ChangeGrantOwnershipForm();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnnualIncome;
    private javax.swing.JLabel Birthday;
    private javax.swing.JLabel NoOfUnmarriedChildren;
    private javax.swing.JLabel NumberOfMarriedChildren;
    private javax.swing.JLabel Occupation;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JLabel Status;
    private javax.swing.JButton add_button;
    private javax.swing.JTextArea address_text;
    private javax.swing.JLabel addresslabel;
    private javax.swing.JTextField annualIncomeText;
    private org.freixas.jcalendar.JCalendarCombo birthdayChooser1;
    private javax.swing.JButton cancel_button;
    private javax.swing.JPanel childrenCountPanel;
    private javax.swing.JComboBox grantno_changeOwnerCombo;
    private javax.swing.JLabel incomenotvalidlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner marriedChildrenCountSpinner;
    private javax.swing.JRadioButton marriedStatusRButton;
    private javax.swing.JLabel namelabel;
    private javax.swing.JLabel namenotvalidlabel;
    private javax.swing.JTextField newowner_name_text;
    private javax.swing.JLabel nicInvalidLabel;
    private javax.swing.JTextField nic_text;
    private javax.swing.JLabel niclabel;
    private javax.swing.JTextField occupationText;
    private javax.swing.JLabel occupationnotvalidlabel;
    private javax.swing.JTextField ownerText;
    private javax.swing.JLabel phonenumnotvalidlabel;
    private javax.swing.JRadioButton singleStatusRButton;
    private javax.swing.JTextField telephoneText;
    private javax.swing.JSpinner unmarriedChildrenCountSpinner;
    // End of variables declaration//GEN-END:variables
}
